

  Asserts
    root commands w/o newPage
      1) $ fails without newPage
      2) $ fails without newPage - sync
      3) pipe fails without newPage
      4) mouse fails without newPage
    With server
      5) value fails on a non element
      6) mouse fails on an element
      7) fails on an element that doesn't exist
      8) fails on an element that doesn't exist - combined description
    commands with special arguments
      9) fails on root $ without a selector - null
      10) fails on root $ without a selector - obj
      11) fails on chained $ without a selector - fn
      12) fails on root byText without text
      13) fails on root byText without text
      14) fails on root pipe without fn
      15) fails on chained pipe without fn
      16) fails on root evaluate without fn
      17) fails on chained evaluate without fn


  Matchers
    hooks - beforeEach failure
      18) "before each" hook for "should fail"
    hooks - afterEach failure
      âˆš should pass
      19) "after each" hook: failing hook for "should pass"


  Inline Snapshot
    20) works async
    21) works sync
    22) fails when called on an element


  Matchers
    command matchers - positive
      23) shouldBeDefined
      24) shouldBeTruthy
      25) shouldBeCloseTo
      26) shouldBeGreaterThan
      27) shouldBeGreaterThanOrEqual
      28) shouldBeLessThan
      29) shouldBeLessThanOrEqual
      30) shouldBeFalsy
      31) shouldBeUndefined
      32) shouldBeNull
      33) shouldContain string
      34) shouldContainEqual
      35) shouldHaveLength array
      36) shouldHaveProperty 1
      37) shouldHaveProperty 2
      38) shouldMatchObject
      39) shouldEqual
      40) shouldContain array
      41) shouldMatch
    command matchers - negative
      42) shouldNotBeDefined
      43) shouldNotBeTruthy
      44) shouldNotBeCloseTo
      45) shouldNotBeGreaterThan
      46) shouldNotBeGreaterThanOrEqual
      47) shouldNotBeLessThan
      48) shouldNotBeLessThanOrEqual
      49) shouldNotBeFalsy
      50) shouldNotBeUndefined
      51) shouldNotBeNull
      52) shouldNotContain array
      53) shouldNotContainEqual
      54) shouldNotHaveLength
      55) shouldNotHaveProperty 1
      56) shouldNotHaveProperty 2
      57) shouldNotMatchObject
      58) shouldNotEqual
      59) shouldNotContain string
      60) shouldNotMatch
    asymmetric matchers
      61) any string


  1 passing
  61 failing

  1) Asserts
       root commands w/o newPage
         $ fails without newPage:
     Go to a page (e.g. holly.newPage) before using $
  Error: 
      at Context.<anonymous> (integration/fails/asserts.spec.ts:8:13)

  2) Asserts
       root commands w/o newPage
         $ fails without newPage - sync:
     Go to a page (e.g. holly.newPage) before using $
  Error: 
      at Context.<anonymous> (integration/fails/asserts.spec.ts:12:7)

  3) Asserts
       root commands w/o newPage
         pipe fails without newPage:
     Go to a page (e.g. holly.newPage) before using pipe
  Error: 
      at Context.<anonymous> (integration/fails/asserts.spec.ts:16:7)

  4) Asserts
       root commands w/o newPage
         mouse fails without newPage:
     Go to a page (e.g. holly.newPage) before using mousemove
  Error: 
      at Context.<anonymous> (integration/fails/asserts.spec.ts:20:13)

  5) Asserts
       With server
         value fails on a non element:
     The value command can only be run on a element
  Error: 
      at Context.<anonymous> (integration/fails/asserts.spec.ts:42:10)

  6) Asserts
       With server
         mouse fails on an element:
     The mousedown command was expecting to be run on a page
  Error: 
      at Context.<anonymous> (integration/fails/asserts.spec.ts:52:10)

  7) Asserts
       With server
         fails on an element that doesn't exist:
     The click command could not find element '.test-nope'
  Error: 
      at Context.<anonymous> (integration/fails/asserts.spec.ts:60:29)

  8) Asserts
       With server
         fails on an element that doesn't exist - combined description:
     The click command could not find element ':byText('Test') .test-nope'
  Error: 
      at Context.<anonymous> (integration/fails/asserts.spec.ts:70:10)

  9) Asserts
       commands with special arguments
         fails on root $ without a selector - null:
     expected a selector of type string to be passed to $
  Error: 
      at Context.<anonymous> (integration/fails/asserts.spec.ts:77:7)

  10) Asserts
       commands with special arguments
         fails on root $ without a selector - obj:
     expected a selector of type string to be passed to $
  Error: 
      at Context.<anonymous> (integration/fails/asserts.spec.ts:82:7)

  11) Asserts
       commands with special arguments
         fails on chained $ without a selector - fn:
     expected a selector of type string to be passed to $
  Error: 
      at Context.<anonymous> (integration/fails/asserts.spec.ts:87:18)

  12) Asserts
       commands with special arguments
         fails on root byText without text:
     expected text of type string to be passed to byText
  Error: 
      at Context.<anonymous> (integration/fails/asserts.spec.ts:92:7)

  13) Asserts
       commands with special arguments
         fails on root byText without text:
     expected text of type string to be passed to byText
  Error: 
      at Context.<anonymous> (integration/fails/asserts.spec.ts:97:18)

  14) Asserts
       commands with special arguments
         fails on root pipe without fn:
     pipe expects a function as its argument
  Error: 
      at Context.<anonymous> (integration/fails/asserts.spec.ts:102:7)

  15) Asserts
       commands with special arguments
         fails on chained pipe without fn:
     Expected a function passed into the first argument of pipe
  Error: 
      at Context.<anonymous> (integration/fails/asserts.spec.ts:107:18)

  16) Asserts
       commands with special arguments
         fails on root evaluate without fn:
     pipe expects a function as its argument
  Error: 
      at Context.<anonymous> (integration/fails/asserts.spec.ts:112:7)

  17) Asserts
       commands with special arguments
         fails on chained evaluate without fn:
     Expected a function passed into the first argument of pipe
  Error: 
      at Context.<anonymous> (integration/fails/asserts.spec.ts:117:18)

  18) Matchers
       hooks - beforeEach failure
         "before each" hook for "should fail":
     (received).shouldEqual(expected) // deep equality

Expected: "Failure"
Received: "Hello World"
  Error: 
      at Context.<anonymous> (integration/fails/hooks.spec.ts:27:10)

  19) Matchers
       hooks - afterEach failure
         "after each" hook: failing hook for "should pass":
     (received).shouldEqual(expected) // deep equality

Expected: "Failure"
Received: "Hello World"
  Error: 
      at Context.<anonymous> (integration/fails/hooks.spec.ts:37:10)

  20) Inline Snapshot
       works async:
     expected '"fail"' but got '"hello"'
  Error: 
      at Context.<anonymous> (integration/fails/inlineSnapshot.spec.ts:25:8)

  21) Inline Snapshot
       works sync:
     expected '"fail"' but got '"hello"'
  Error: 
      at Context.<anonymous> (integration/fails/inlineSnapshot.spec.ts:32:8)

  22) Inline Snapshot
       fails when called on an element:
     The shouldMatchInlineSnapshot command can only be run on a value, not a page or element - try converting it to html or text first
  Error: 
      at Context.<anonymous> (integration/fails/inlineSnapshot.spec.ts:37:33)

  23) Matchers
       command matchers - positive
         shouldBeDefined:
     (received).shouldBeDefined()

Received: undefined
  Error: 
      at Context.<anonymous> (integration/fails/matchers.spec.ts:34:9)

  24) Matchers
       command matchers - positive
         shouldBeTruthy:
     (received).shouldBeTruthy()

Received: undefined
  Error: 
      at Context.<anonymous> (integration/fails/matchers.spec.ts:41:9)

  25) Matchers
       command matchers - positive
         shouldBeCloseTo:
     (received).shouldBeCloseTo(expected)

Expected: 1.23
Received: 1.234

Expected precision:    3
Expected difference: < 0.0005
Received difference:   0.0040000000000000036
  Error: 
      at Context.<anonymous> (integration/fails/matchers.spec.ts:48:9)

  26) Matchers
       command matchers - positive
         shouldBeGreaterThan:
     (received).shouldBeGreaterThan(expected)

Expected: > 1.3
Received:   1.234
  Error: 
      at Context.<anonymous> (integration/fails/matchers.spec.ts:55:9)

  27) Matchers
       command matchers - positive
         shouldBeGreaterThanOrEqual:
     (received).shouldBeGreaterThanOrEqual(expected)

Expected: >= 1.4
Received:    1.234
  Error: 
      at Context.<anonymous> (integration/fails/matchers.spec.ts:62:9)

  28) Matchers
       command matchers - positive
         shouldBeLessThan:
     (received).shouldBeLessThan(expected)

Expected: < 1.1
Received:   1.234
  Error: 
      at Context.<anonymous> (integration/fails/matchers.spec.ts:69:9)

  29) Matchers
       command matchers - positive
         shouldBeLessThanOrEqual:
     (received).shouldBeLessThanOrEqual(expected)

Expected: <= 1.1
Received:    1.234
  Error: 
      at Context.<anonymous> (integration/fails/matchers.spec.ts:76:9)

  30) Matchers
       command matchers - positive
         shouldBeFalsy:
     (received).shouldBeFalsy()

Received: 1.234
  Error: 
      at Context.<anonymous> (integration/fails/matchers.spec.ts:83:9)

  31) Matchers
       command matchers - positive
         shouldBeUndefined:
     (received).shouldBeUndefined()

Received: "Hello World"
  Error: 
      at Context.<anonymous> (integration/fails/matchers.spec.ts:89:10)

  32) Matchers
       command matchers - positive
         shouldBeNull:
     (received).shouldBeNull()

Received: undefined
  Error: 
      at Context.<anonymous> (integration/fails/matchers.spec.ts:96:9)

  33) Matchers
       command matchers - positive
         shouldContain string:
     (received).shouldContain(expected) // indexOf

Expected substring: "Luke"
Received string:    "Hello World"
  Error: 
      at Context.<anonymous> (integration/fails/matchers.spec.ts:102:10)

  34) Matchers
       command matchers - positive
         shouldContainEqual:
     (received).shouldContainEqual(expected) // deep equality

Expected value: {"test": false}
Received array: ["Hello", "World", {"test": true}]
  Error: 
      at Context.<anonymous> (integration/fails/matchers.spec.ts:109:9)

  35) Matchers
       command matchers - positive
         shouldHaveLength array:
     (received).shouldHaveLength(expected)

Expected length: 4
Received length: 3
Received array:  ["Hello", "World", {"test": true}]
  Error: 
      at Context.<anonymous> (integration/fails/matchers.spec.ts:116:9)

  36) Matchers
       command matchers - positive
         shouldHaveProperty 1:
     (received).shouldHaveProperty(path)

Expected path: "a.b.d"
Received path: "a.b"

Received value: {"c": "Hello World"}
  Error: 
      at Context.<anonymous> (integration/fails/matchers.spec.ts:123:9)

  37) Matchers
       command matchers - positive
         shouldHaveProperty 2:
     (received).shouldHaveProperty(path)

Expected path: ["a", "b", "d"]
Received path: ["a", "b"]

Received value: {"c": "Hello World"}
  Error: 
      at Context.<anonymous> (integration/fails/matchers.spec.ts:130:9)

  38) Matchers
       command matchers - positive
         shouldMatchObject:
     (received).shouldMatchObject(expected)

- Expected  - 1
+ Received  + 3

  Object {
    "a": Object {
-     "b": "test",
+     "b": Object {
+       "c": "Hello World",
+     },
    },
  }
  Error: 
      at Context.<anonymous> (integration/fails/matchers.spec.ts:137:9)

  39) Matchers
       command matchers - positive
         shouldEqual:
     (received).shouldEqual(expected) // deep equality

Expected: "Hello Luke"
Received: "Hello World"
  Error: 
      at Context.<anonymous> (integration/fails/matchers.spec.ts:143:10)

  40) Matchers
       command matchers - positive
         shouldContain array:
     (received).shouldContain(expected) // indexOf

Expected value: "Luke"
Received array: ["Hello", "World", {"test": true}]
  Error: 
      at Context.<anonymous> (integration/fails/matchers.spec.ts:150:9)

  41) Matchers
       command matchers - positive
         shouldMatch:
     (received).shouldMatch(expected)

Expected pattern: /Luke/i
Received string:  "Hello World"
  Error: 
      at Context.<anonymous> (integration/fails/matchers.spec.ts:156:10)

  42) Matchers
       command matchers - negative
         shouldNotBeDefined:
     (received).shouldNotBeDefined()

Received: 1.234
  Error: 
      at Context.<anonymous> (integration/fails/matchers.spec.ts:165:9)

  43) Matchers
       command matchers - negative
         shouldNotBeTruthy:
     (received).shouldNotBeTruthy()

Received: 1.234
  Error: 
      at Context.<anonymous> (integration/fails/matchers.spec.ts:172:9)

  44) Matchers
       command matchers - negative
         shouldNotBeCloseTo:
     (received).shouldNotBeCloseTo(expected, precision)

Expected: not 1.23
Received:     1.234

Expected precision:        2
Expected difference: not < 0.005
Received difference:       0.0040000000000000036
  Error: 
      at Context.<anonymous> (integration/fails/matchers.spec.ts:179:9)

  45) Matchers
       command matchers - negative
         shouldNotBeGreaterThan:
     (received).shouldNotBeGreaterThan(expected)

Expected: not > 1
Received:       1.234
  Error: 
      at Context.<anonymous> (integration/fails/matchers.spec.ts:186:9)

  46) Matchers
       command matchers - negative
         shouldNotBeGreaterThanOrEqual:
     (received).shouldNotBeGreaterThanOrEqual(expected)

Expected: not >= 1.234
Received:        1.234
  Error: 
      at Context.<anonymous> (integration/fails/matchers.spec.ts:193:9)

  47) Matchers
       command matchers - negative
         shouldNotBeLessThan:
     (received).shouldNotBeLessThan(expected)

Expected: not < 1.4
Received:       1.234
  Error: 
      at Context.<anonymous> (integration/fails/matchers.spec.ts:200:9)

  48) Matchers
       command matchers - negative
         shouldNotBeLessThanOrEqual:
     (received).shouldNotBeLessThanOrEqual(expected)

Expected: not <= 1.234
Received:        1.234
  Error: 
      at Context.<anonymous> (integration/fails/matchers.spec.ts:207:9)

  49) Matchers
       command matchers - negative
         shouldNotBeFalsy:
     (received).shouldNotBeFalsy()

Received: undefined
  Error: 
      at Context.<anonymous> (integration/fails/matchers.spec.ts:214:9)

  50) Matchers
       command matchers - negative
         shouldNotBeUndefined:
     (received).shouldNotBeUndefined()

Received: undefined
  Error: 
      at Context.<anonymous> (integration/fails/matchers.spec.ts:221:9)

  51) Matchers
       command matchers - negative
         shouldNotBeNull:
     (received).shouldNotBeNull()

Received: null
  Error: 
      at Context.<anonymous> (integration/fails/matchers.spec.ts:228:9)

  52) Matchers
       command matchers - negative
         shouldNotContain array:
     (received).shouldNotContain(expected) // indexOf

Expected value: not "World"
Received array:     ["Hello", "World", {"test": true}]
  Error: 
      at Context.<anonymous> (integration/fails/matchers.spec.ts:235:9)

  53) Matchers
       command matchers - negative
         shouldNotContainEqual:
     (received).shouldNotContainEqual(expected) // deep equality

Expected value: not {"test": true}
Received array:     ["Hello", "World", {"test": true}]
  Error: 
      at Context.<anonymous> (integration/fails/matchers.spec.ts:241:9)

  54) Matchers
       command matchers - negative
         shouldNotHaveLength:
     (received).shouldNotHaveLength(expected)

Expected length: not 3
Received array:      ["Hello", "World", {"test": true}]
  Error: 
      at Context.<anonymous> (integration/fails/matchers.spec.ts:248:9)

  55) Matchers
       command matchers - negative
         shouldNotHaveProperty 1:
     (received).shouldNotHaveProperty(path)

Expected path: not "a.b.c"

Received value: "Hello World"
  Error: 
      at Context.<anonymous> (integration/fails/matchers.spec.ts:255:9)

  56) Matchers
       command matchers - negative
         shouldNotHaveProperty 2:
     (received).shouldNotHaveProperty(path)

Expected path: not ["a", "b", "c"]

Received value: "Hello World"
  Error: 
      at Context.<anonymous> (integration/fails/matchers.spec.ts:262:9)

  57) Matchers
       command matchers - negative
         shouldNotMatchObject:
     (received).shouldNotMatchObject(expected)

Expected: not {"a": {"d": "test"}}
Received:     {"a": {"b": {"c": "Hello World"}, "d": "test"}}
  Error: 
      at Context.<anonymous> (integration/fails/matchers.spec.ts:269:9)

  58) Matchers
       command matchers - negative
         shouldNotEqual:
     (received).shouldNotEqual(expected) // deep equality

Expected: not "Hello World"

  Error: 
      at Context.<anonymous> (integration/fails/matchers.spec.ts:275:10)

  59) Matchers
       command matchers - negative
         shouldNotContain string:
     (received).shouldNotContain(expected) // indexOf

Expected substring: not "World"
Received string:        "Hello World"
  Error: 
      at Context.<anonymous> (integration/fails/matchers.spec.ts:281:10)

  60) Matchers
       command matchers - negative
         shouldNotMatch:
     (received).shouldNotMatch(expected)

Expected pattern: not /hello/i
Received string:      "Hello World"
  Error: 
      at Context.<anonymous> (integration/fails/matchers.spec.ts:287:10)

  61) Matchers
       asymmetric matchers
         any string:
     (received).shouldEqual(expected) // deep equality

Expected: Any<Function>
Received: "Hello World"
  Error: 
      at Context.<anonymous> (integration/fails/matchers.spec.ts:295:10)



